파이썬 스타일 코드(pythonic code)  
: 파이썬 스타일의 코드 작성 기법  
: 특별한 문법이 아니라 파이썬에서 기본적으로 제공하는 문법들을 활용하여 코딩하는 것  
: 코드상으로 사람이 해야 하는 일을 최대한 줄이면서 같은 목표를 달성할 수 있는 문법 체계  
: 파이썬 스타일 코드를 사용하면 다른사람이 작성한 코드를 쉽게 이해 가능  
: 코드 자체도 간결해지고 코드 작성 시간도 줄일 수 있음  

리스트 컴프리헨션(list comprehension)  
: 기존 리스트형을 사용하여 간단하게 새로운 리스트를 만드는 기법  
: 리스트와 for문을 한 줄 에 사용할 수 있는 장점  
: 직관적인 리스트 생성  
: 코드 작성의 효율성을 높이고, 간결한 코드를 생성  
: 프로그램의 실행 속도를 높임  

Enumerate()  
: 리스트값을 추출할 때 인덱스를 붙여 함께 출력하는 방법  
: 주로 딕셔너리 형처럼 사용되며, 인덱스(ex. 0, 1,,,)을 key로 단어를 value로 해서 결과를 출력  

Zip()  
: 1개 이상의 리스트값이 같은 인덱스에 있을 때 병렬로 묶는 함수  

람다(lambda) 함수  
: 함수의 이름 없이, 함수처럼 사용할 수 있는 익명의 함수  
: 일반적으로 람다 함수는 이름을 지정하지 않아도 사용 가능  

map() 함수  
: 연속 데이터를 저장하는 시퀀스형에서 요소마다 같은 기능을 적용할 때 사용  
: 리스트나 튜플처럼 요소가 있는 시퀀스 자료형에 사용됨  

Reduce()  
: map()함수처럼 시퀀스 자료형에 함수를 차례대로 적용하는 함수  

예외(Exception)  
: 프로그램 개발 시 예상치 못한 상황이 발생한 것  
: 예측가능한 예외 - 개발자가 발생여부를 사전에 인지할 수 있는 예외  
: 예측 불가능한 예외 : 인터프리터가 프로그램을 처리할 때 발생한 문제를 예외라고 사용자에게 알려줌  
  이 경우 예외가 발생하면서 프로그램이 종료되므로 조치 필요  
: try-except / try-except-else / try-except-finally / raise / assert  
