모듈  
: 프로그래밍에서의 모듈은 작은 프로그램 조각을 뜻함  
: 즉, 하나하나 연결해 어떤 목적을 가진 프로그램을 만드는 작은 프로그램  
: 각 모듈 역시 저마다 역할이 있고, 서로 다른 모듈과 인터페이스만 연결되면 사용할 수 있음  
: 모듈화된 프로그램을 사용하면 다른 개발자가 만든 프로그램이나 자신이 만든 프로그램을 매우 쉽게 사용하거나 제공할 수 있음  

내장 모듈  
: 파이썬에서 기본적으로 제공하는 모듈 중 대표적으로 random 모듈이 있음  
: 난수를 쉽게 생성해주는 모듈  
: import 구문이 중요  
: import 구문은 random을 사용할 수 있또록 호출하라는 명령어  
: 해당 모듈의 이름을 사용하여 그 모듈 안에 있는 함수 randint() 함수를 사용하기 위해 이 randint 함수의 인터페이스, 즉 매개변수의 설정이 어떻게 되어 있는지 알아야 함  

패키지(packages)  
: 모듈의 묶음  
: 일종의 디렉터리처럼 하나의 패키지 안에 여러 개의 모듈이 있는데, 이 모듈들이 서로 포함 관계를 가지며 거대한 패키지를 만듦  

## 내장 모듈의 사용  
random 모듈  
: 난수 생성 모듈은 random 모듈 사용하면 됨  
: 해당 모듈 안에는 여러가지 함수가 있는 정수 모듈을 생성하는 randint() 함수와 임의의 난수를 생성하는 random()함수를 쓸 수 있음  
time 모듈  
: 일반적으로 시간을 변경하거나 현재 시각을 출력함  
urllib 모듈  
: 웹과 관련된 urllib 모듈은 웹주소의 정보를 불러옴  
: urllib의 request 모듈을 사용하면 특정 URL의 정보를 불러올 수 있음  
: urllib.request.urlopen()의 괄호에 특정 웹주소를 입력하면 해당 주소의 HTML 정보를 가져옴  

웹(World Wide Web)  
: 인터넷에 연결된 컴퓨터를 이용하여 사람들과 정보를 공유할 수 있도록 거미줄처럼 엮인 공간  

## 웹 컴포넌트  
HTML(Hyper Text Markup Language)  
:웹상의 정보를 구조적으로 표현하기 위한 언어  
:태그(tag)는 < >로 둘러싸여 있고, 그 안에 정보에 대한 의미를 적고 그 의미가 끝나는 부분에 / 사용하여 해당 태그 종료  
HTTP(Hypertext Transaction Protocol)  
: 인터넷에서 컴퓨터 간에 정보를 주고받을 때 사용하는 일종의 약속. 일반적으로 이러한 약속을 프로토콜이라고 함  

## 웹의 동작 순서  
: 웹에 있는 정보를 보기 위해 먼저 하는 일은 웹 브라우저를 시작하고, 거기에 주소 정보를 입력하는 것  
: 주소 정보의 공식 이름은 URL(Uniform Resource Locator)라고 함  
: URL에는 해당 서버가 위치한 인터넷 주소 정보인 도메인 네임이 있음.  
: 흔히 도메인 정보 또는 서버 주소라고도 하는 이 주소를 통해 웹의 정보를 제공하는 서버에 접속  
: 일반적으로 컴퓨터는 인터넷 프로토콜 주소, 즉 IP 주소라고 부르는 주소값 가짐  
: IP 주소를 컴퓨터의 주소로 생각하면 이 주소에 접속하기 위해 사용하는 도메인 네임과 연결하기 위한 도메인 네임 서버(DNS)가 운영됨  
: 요청(웹 주소, form, header 등) - 처리(database 처리 등 요청 대응) - 응답(HTML, XML 등으로 결과 반환) - 렌더링(HTML, XML 표시)  

## 웹 스크래핑  
: 모든 웹은 HTML로 구성되어 있으므로, HTML의 규칙을 파악한다면 얼마든지 HTML에서 필요한 정보를 가져올 수 있음. 이러한 과정을 웹 스크래핑이라고 함  

## HTML 파싱  
: 웹 페이지의 HTML을 분석하여 필요한 URL을 추출하는 작업  
: 파싱은 특정 텍스트를 분석하여 그 데이터로부터 필요한 정보를 추출하는 과정  

## 정규 표현식(regular expression)  
: 일종의 문자를 표현하는 공식으로, 특정 규칙이 있는 문자열 집합을 추출할 때 자주 사용하는 기법  
: 정규 표현식을 배우기 위해 기본으로 알아야 하는 개념은 메타문자  
: 메타문자는 문자를 설명하기 위한 문자로, 문자의 구성을 설명하기 위해 원래의 의미가 아닌 다른 의미로 쓰이는 문자를 뜻함  
기본 메타문자 []  
반복 관련 메타문자 -, +, *, ?, {}  
그외 메타문자 (), ., |, ^, $, \  

## XML(eXtensible Markup Language)  
: 확장적인 마크업 언어  
: 데이터의 구조와 의미를 설명하는 태그를 사용하여 어떤 데이터의 속성과 값을 표현하는 언어  
: 즉, 시작 태그와 종료 태그 사이에 어떤 값이 있고, 그 값은 태그의 이름으로 만들어진 속성에 대한 값이 됨  
: XML로 정보를 표현할 때 가장 기본적인 방법은 트리 형태로 표현하는 것. 이는 HTML과 완전 같으며 모든 태그 기반의 언어가 지닌 공통적인 특징  

## BeautifulSoup 모듈  
: 일종의 래퍼(wrapper). 기존 파싱 기능이 있는 다른 라이브러리를 쉽게 사용할 수 있도록 함  
: 전통적인 파이썬 XML 파서에는 lxml과 html5lib 등이 있으며, BeautifulSoup 모듈은 이를 차용해 데이터를 쉽고 빠르게 처리  

## JSON  
: XML 보다 데이터 용량이 적고 코드로의 전환이 쉽다는 측면에서 XML의 대체재로 가장 많이 활용되고 있음  
: 파이썬의 딕셔너리형과 매우 비슷. 키-값의 쌍으로 구성되어 있음  
: XML과 비교할 때 JSON의 장점은 코드가 간결하고, 코드의 전환이 쉽다는 점  
: 코드의 간결함 때문에 용량의 절약이라는 가장 큰 장점  
